-- Alunos:
-- -> Felipe Alves Belisário
-- -> Breno Caldeira Nascimento
-- -> Adiel Pereira Prado

-- 1)

CREATE SCHEMA lojaAula32;
SET search_path TO lojaAula32;
SET datestyle TO 'DMY';

CREATE TABLE CLIENTE (
   CODCLI INTEGER NOT NULL,
   NOMECLI VARCHAR(50) NOT NULL,
   ENDERECO VARCHAR(60),
   CIDADE CHAR (20) NOT NULL,
   CEP CHAR(10),
   UF CHAR (2) NOT NULL, 
   CGC CHAR(14) NOT NULL,
   PRIMARY KEY (CODCLI)
);

CREATE TABLE VENDEDOR (
   CODVEND INTEGER NOT NULL,
   NOMEVEND VARCHAR(50) NOT NULL,
   SALFIXO FLOAT,
   FAIXACOMIS CHAR NOT NULL,
   PRIMARY KEY (CODVEND)
);

CREATE TABLE PRODUTO (
   CODPROD INTEGER NOT NULL,
   UNIDADE CHAR(2) NOT NULL,
   DESCRI VARCHAR(30) NOT NULL,
   VALUNIT FLOAT,
   PRIMARY KEY (CODPROD)
);

CREATE TABLE PEDIDO (
   NUMPED INTEGER NOT NULL,
   PRAZOENTR INTEGER,
   CODCLI INTEGER NOT NULL,
   CODVEND INTEGER,
   PRIMARY KEY (NUMPED),
   FOREIGN KEY (CODCLI) REFERENCES CLIENTE (CODCLI),
   FOREIGN KEY (CODVEND) REFERENCES VENDEDOR (CODVEND)
);

CREATE TABLE ITEMPED (
   NUMPED INTEGER NOT NULL,
   CODPROD INTEGER NOT NULL,
   QUANT INTEGER,
   PRIMARY KEY (NUMPED, CODPROD),
   FOREIGN KEY (NUMPED) REFERENCES PEDIDO (NUMPED),
   FOREIGN KEY (CODPROD) REFERENCES PRODUTO (CODPROD)
);

-- dados dos CLIENTES  --------

INSERT INTO CLIENTE VALUES (20,'BETH DA SILVA','AV. CLIMERIO, 230','SAO PAULO',25678300,'SP','32485211125025');
INSERT INTO CLIENTE VALUES (110,'JORGE BRITO','RUA CAIAPO, 13','CURITIBA',30078500,'PR','14512764983491');
INSERT INTO CLIENTE VALUES (130,'EDMAR CAMARGO','RUA DA PRAIA, S/N','SALVADOR',30099300,'BA','23456890000287');
INSERT INTO CLIENTE VALUES (157,'PAULO SOUSA','TV. MORAES, 230','LONDRINA',89785200,'PR','12748111000125');
INSERT INTO CLIENTE VALUES (180,'LVIO FIGUEIRAS','AV.BEIRA MAR, 1256','FLORIANPOLIS',30001500,'SC','12788888001020');
INSERT INTO CLIENTE VALUES (222,'LUCIA CAMATA','R.ITABIRA, 123 - LOJA 9','BELO HORIZONTE',22124391,'MG','28315213934881');
INSERT INTO CLIENTE VALUES (234,'JOS OLIVEIRA','QUADRA 3, BL.3 - SL.2','BRASLIA',22897100,'DF','21768811000120');
INSERT INTO CLIENTE VALUES (260,'SUSANA OLIVEIRA','R.LOPES MENDES, 200','NITERI',30045500,'RJ','21758855000210');
INSERT INTO CLIENTE VALUES (290,'RENATO SANTIAGO','R.MEIRELES, 200','SAO PAULO',30025400,'SP','13251141000120');
INSERT INTO CLIENTE VALUES (390,'SEBASTIO CORREIA','R.DA IGREJA, 70','UBERABA',30048400,'MG','32179888000120');
INSERT INTO CLIENTE VALUES (410,'RODOLFO BASTOS','LARGO DA LAPA, 27','RIO DE JANEIRO',20101100,'RJ','12833511000387');
INSERT INTO CLIENTE VALUES (720,'ANA FARIAS','RUA 17 , N.19','NITEROI',24358310,'RJ','12113231000134');
INSERT INTO CLIENTE VALUES (830,'MAURICIO FELIX','AV.PAULISTA, 1236 - SL 123','SAO PAULO',3012683,'SP','32816895000256');
INSERT INTO CLIENTE VALUES (870,'FLAVIO CESAR TORRES','AV.PRES.VARGAS, 10','SAO PAULO',22763931,'SP','22534126938790');
INSERT INTO CLIENTE VALUES (871,'JONAS ALBUQUERQUE','AV.PRES.VARGAS, 250','SAO PAULO',22763931,'SP','12345678901234');

-- dados dos VENDEDORES --------

INSERT INTO VENDEDOR VALUES(11,'JOAO SANTOS OLIVEIRA', 2780.00,'C');
INSERT INTO VENDEDOR VALUES(101,'JOAO SANTOS SILVA', 2650.00,'C');
INSERT INTO VENDEDOR VALUES(111,'CARLOS VIEIRA', 2490.00,'A');
INSERT INTO VENDEDOR VALUES(209,'JOSE FELISBERTO', 1800.00,'C');
INSERT INTO VENDEDOR VALUES(213,'JONAS SILVA', 2300.00,'A');
INSERT INTO VENDEDOR VALUES(240,'ANTONIO MORAIS', 9500.00,'C');
INSERT INTO VENDEDOR VALUES(250,'MAURICIO SERRA', 2930.00,'B');
INSERT INTO VENDEDOR VALUES(310,'JOSIAS DA SILVA', 870.00,'B');
INSERT INTO VENDEDOR VALUES(720,'FELIPE NASCIMENTO', 4600.00,'A');
INSERT INTO VENDEDOR VALUES(100,'MARCOS FARIAS', 800.00,'D');
INSERT INTO VENDEDOR VALUES(200,'MONICA DA SILVA', 1600.00,'D');
INSERT INTO VENDEDOR VALUES(280,'SAMANTA DE OLIVEIRA', 3600.00,'C');

-- dados dos PRODUTOS -------- 

INSERT INTO PRODUTO VALUES (13,'G','OURO', 6.18);
INSERT INTO PRODUTO VALUES (22,'M','LINHO', 0.11);
INSERT INTO PRODUTO VALUES (25,'KG','QUEIJO', 0.97);
INSERT INTO PRODUTO VALUES (30,'AS','AUCAR', 0.30);
INSERT INTO PRODUTO VALUES (31,'BA','CHOCOLATE', 0.87);
INSERT INTO PRODUTO VALUES (45,'M','MADEIRA', 0.25);
INSERT INTO PRODUTO VALUES (53,'M','LINHA', 1.80);
INSERT INTO PRODUTO VALUES (77,'M','PAPEL', 1.05);
INSERT INTO PRODUTO VALUES (78,'L','VINHO', 2.00);

CREATE TABLE Auditoria_Salarios (
	CodVendedor INTEGER NOT NULL,
	SalarioAnterior FLOAT,
	NovoSalario FLOAT NOT NULL,
	DataAlteracao DATE NOT NULL,
	
	FOREIGN KEY (CodVendedor) REFERENCES Vendedor (CODVEND)
);

-- 2)

--a)

CREATE OR REPLACE FUNCTION AlteraSalarios() 
RETURNS VOID AS $$
DECLARE tupla record;
DECLARE new_salario INTEGER;
BEGIN

FOR tupla IN SELECT codvend, salfixo, faixacomis FROM VENDEDOR
LOOP
	CASE
		WHEN tupla.faixacomis = 'A' THEN
			new_salario := (0.05 * tupla.salfixo) + tupla.salfixo;
		WHEN tupla.faixacomis = 'B' THEN
			new_salario := (0.10 * tupla.salfixo) + tupla.salfixo;
		ELSE
			new_salario := (0.15 * tupla.salfixo) + tupla.salfixo;
	END CASE;
	
	UPDATE VENDEDOR
	SET SALFIXO = new_salario
	WHERE codvend = tupla.codvend;
	
END LOOP;
END $$ LANGUAGE 'plpgsql';

CREATE OR REPLACE FUNCTION Altera_Audit() RETURNS trigger AS $Altera_Audit$
BEGIN

	INSERT INTO Auditoria_Salarios VALUES (old.codvend, old.salfixo, new.salfixo, CURRENT_DATE);

RETURN NULL;	
END $Altera_Audit$ LANGUAGE 'plpgsql';

CREATE TRIGGER before_salfixo_update
AFTER UPDATE OF salfixo ON vendedor
FOR EACH ROW
EXECUTE PROCEDURE Altera_Audit();

SELECT AlteraSalarios();

SELECT codvend, salfixo
FROM vendedor;

SELECT *
FROM Auditoria_Salarios;

--b)

--b.a)

ALTER TABLE pedido ADD qnt_itens INTEGER;

--b.b)

CREATE OR REPLACE FUNCTION QuantosItens()
RETURNS VOID AS $$
DECLARE n_ped pedido.numped%TYPE;
DECLARE quant_ped INTEGER;
BEGIN

FOR n_ped IN SELECT numped FROM pedido
LOOP

	SELECT SUM(quant)
	INTO quant_ped
	FROM itemped
	WHERE numped = n_ped;
	
	UPDATE pedido
	SET qnt_itens = quant_ped
	WHERE numped = n_ped;

END LOOP;

END $$ LANGUAGE 'plpgsql';

SELECT QuantosItens();

SELECT numped, qnt_itens
FROM pedido

--b.c e b.d) Não faz sentido ter um gatilho para isso pois o atributo criado nunca não deixará de ser um número, e isso se deve
-- até mesmo por ele ser derivado

--c)

CREATE OR REPLACE FUNCTION Notifica_Maior10() RETURNS trigger AS $Altera_Audit$
BEGIN

	RAISE NOTICE 'A quantidade de itens do pedido % eh maior que 10', old.numped;

RETURN NULL;	
END $Altera_Audit$ LANGUAGE 'plpgsql';

CREATE TRIGGER before_qntitens_update
BEFORE UPDATE OF qnt_itens ON pedido
FOR EACH ROW WHEN (new.qnt_itens > 10)
EXECUTE PROCEDURE Notifica_Maior10();

SELECT QuantosItens();
